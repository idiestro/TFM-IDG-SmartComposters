# Librerías del Proyecto SmartComposters

Este directorio contiene las librerías específicas del proyecto SmartComposters. Cada librería está diseñada para manejar una funcionalidad específica del sistema.

## Estructura de Librerías

|--lib
|  |
|  |--configReader
|  |  |- ConfigReader.h
|  |  |- ConfigReader.cpp
|  |
|  |--jsonUtils
|  |  |- JsonUtils.h
|  |  |- JsonUtils.cpp
|  |
|  |--logsUtils
|  |  |- LogsUtils.h
|  |  |- LogsUtils.cpp
|  |
|  |--mqttConnection
|  |  |- MqttConnection.h
|  |  |- MqttConnection.cpp
|  |
|  |--simulatedMeasures
|  |  |- SimulatedMeasures.h
|  |  |- SimulatedMeasures.cpp
|  |
|  |- README --> ESTE ARCHIVO

## Descripción de las Librerías

### configReader
Librería para la lectura y descifrado de propiedades de configuración. Incluye funcionalidades para:
- Decodificación de strings en base64
- Manejo seguro de credenciales y configuraciones

### jsonUtils
Librería para el manejo de JSON en el proyecto. Proporciona:
- Carga y parseo de JSON
- Modificación de valores en documentos JSON
- Serialización de JSON a string
- Soporte para diferentes tipos de datos (string, int, float, bool)

### logsUtils
Librería para el manejo de logs en la pantalla LCD del M5Tough. Características:
- Visualización de mensajes en la pantalla LCD
- Gestión automática del scroll de mensajes
- Impresión simultánea en puerto serie
- Limpieza automática de la pantalla cuando está llena

### mqttConnection
Librería para la gestión de conexiones MQTT. Funcionalidades:
- Conexión a broker MQTT
- Gestión de conexión WiFi
- Publicación y suscripción a topics
- Manejo de mensajes MQTT
- Reconexión automática
- Identificación única del dispositivo

### simulatedMeasures
Librería para la simulación de medidas del compostador. Simula:
- Temperatura ambiental
- Humedad ambiental
- Niveles de O2 y CO2
- Temperatura de la biomasa
- Peso de la biomasa
- Cantidad de fluido
- pH de la biomasa

## Uso de las Librerías

Para utilizar estas librerías en tu proyecto, simplemente incluye los archivos de cabecera correspondientes:

```cpp
#include <configReader.h>
#include <jsonUtils.h>
#include <logsUtils.h>
#include <mqttConnection.h>
#include <simulatedMeasures.h>

// Tu código aquí...
```

El PlatformIO Library Dependency Finder encontrará automáticamente las dependencias necesarias al escanear los archivos fuente del proyecto.

Para más información sobre el PlatformIO Library Dependency Finder:
- https://docs.platformio.org/page/librarymanager/ldf.html
